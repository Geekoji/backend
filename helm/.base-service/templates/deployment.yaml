apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}

spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}

  selector:
    matchLabels:
      app: {{ .Release.Name }}

  template:
    metadata:
      labels:
        app: {{ .Release.Name }}

    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          ports:
            - containerPort: {{ .Values.service.targetPort }}

          env:
            - name: API_VERSION
              value: {{ .Values.image.tag | quote }}
            - name: PYTHONPATH
              value: "/src"

          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            {{- if .Values.secrets }}
            - secretRef:
                name: {{ .Release.Name }}-secrets
            {{ end }}

          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: /alive
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
          {{ end }}

          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /alive
              port: {{ .Values.service.targetPort }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          {{ end }}

          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.targetPort }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end }}

          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}

          {{ if .Values.volumeMounts -}}
          volumeMounts: {{ toYaml .Values.volumeMounts | nindent 12 }}
          {{ end }}

      {{- if .Values.volumes }}
      volumes: {{ toYaml .Values.volumes | nindent 8 }}
      {{- end }}
