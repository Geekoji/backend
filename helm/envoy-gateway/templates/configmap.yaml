apiVersion: v1
kind: ConfigMap

metadata:
  name: {{ .Values.envoyConfigMapName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"

data:
  envoy.yaml: |
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: {{ .Values.service.targetPorts.admin }}

    static_resources:
      listeners:
      - name: listener_http
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: {{ .Values.service.targetPorts.http }}

        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: http_redirect

              route_config:
                name: redirect
                virtual_hosts:
                - name: redirect
                  domains: ["*.no-words.space"]
                  routes:
                  - match: { prefix: "/" }
                    redirect: { https_redirect: true }

              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: listener_https
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: {{ .Values.service.targetPorts.https }}

        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: envoy_https

              use_remote_address: true
              xff_num_trusted_hops: 1
              skip_xff_append: true

              local_reply_config:
                body_format: { json_format: { detail: "%LOCAL_REPLY_BODY%" } }

              http_filters:
              - name: envoy.filters.http.buffer
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
                  max_request_bytes: 10485760  # Global buffer limit - 10 MB

              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    auth0:
                      issuer: {{ .Values.providers.auth0.issuer }}
                      claim_to_headers:
                      - claim_name: sub
                        header_name: x-user-id
                      remoteJwks:
                        httpUri:
                          uri: http://auth-service.development.svc.cluster.local/.well-known/jwks.json
                          cluster: auth-service
                          timeout: 1s
                        cache_duration:
                          seconds: 3600
                  rules:
                  - match: { safe_regex: { regex: "^/(docs|openapi/.*\\.json)" } }
                  - match: { prefix: "/auth" }
                  - match: { prefix: "/" }
                    requires: { provider_name: auth0 }

              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

              route_config:
                name: local_route
                virtual_hosts:
                - name: api_route
                  domains: {{ toYaml .Values.virtualHosts.domains | nindent 18 }}
                  routes:
                  {{- range .Files.Glob "files/routes/*.yaml" }}
                  {{ . | toString | nindent 18 | trim }}
                  {{ end }}

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain: { filename: "/etc/envoy/certs/tls.crt" }
                  private_key: { filename: "/etc/envoy/certs/tls.key" }

      clusters:
      {{- range .Files.Glob "files/clusters/*.yaml" }}
      {{ . | toString | nindent 6 | trim }}
      {{ end }}
